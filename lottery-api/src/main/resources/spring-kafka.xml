<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">
         
	     <bean id="connectionProperties" class="java.util.HashMap">
     	<constructor-arg>
     		<map>
		     	<entry key="bootstrap.servers" value="${bootstrap.servers}"/>
		     	<entry key="group.id" value="0"/>
		     	<entry key="retries" value="10"/>
		     	<entry key="batch.size" value="16384"/>
		     	<entry key="linger.ms" value="1"/>
		     	<entry key="buffer.memory" value="33554432"/>
		     	<entry key="key.serializer" value="org.apache.kafka.common.serialization.IntegerSerializer"/>
		     	<entry key="value.serializer" value="org.apache.kafka.common.serialization.StringSerializer"/>
     		</map>
     	</constructor-arg>
     </bean>
     
     <!-- 创建kafkatemplate需要使用的producerfactory bean -->
     <bean id="producerFactory" class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
     	<constructor-arg>
     		<ref bean="connectionProperties"/>
     	</constructor-arg>
     </bean>
     
     <!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
     <bean id="KafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
     	<constructor-arg ref="producerFactory"/>
     	<constructor-arg name="autoFlush" value="true"/>
     	<property name="defaultTopic" value="account_details"/>
     </bean>
     
          <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
     	<constructor-arg>
     		<ref bean="connectionProperties"/>
     	</constructor-arg>
     </bean>
     
     <!-- 实际执行消息消费的类 -->
     <bean id="statProfitMsgConsumer" class="com.jll.stat.StatProfitServiceImpl"/>
     
     <!-- 消费者容器配置信息 -->
     <bean id="statProfitMsgContainerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
     	<constructor-arg value="account_details"/>
     	<property name="messageListener" ref="statProfitMsgConsumer"/>
     </bean>
     
     <!-- 创建kafka template bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
     <bean id="statProfitMsgContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" init-method="doStart">
     	<constructor-arg ref="consumerFactory"/>
     	<constructor-arg ref="statProfitMsgContainerProperties"/>
     </bean>
</beans>